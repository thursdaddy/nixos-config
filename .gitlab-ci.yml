variables:
  HOSTS: "c137 homebox kepler jupiter wormhole"

stages:
  - wakeup
  - flake
  - build
  - attic
  - sleep

wakeup:
  stage: wakeup
  image: alpine/curl:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - echo "üîç Checking device state..."
    - |
      DEVICE_STATE=$(curl -s http://192.168.10.60:8009/state/ip/192.168.10.137)
      if echo "$DEVICE_STATE" | grep -q '<state>offline</state>'; then
        echo "üö© C137 is OFFLINE"
        curl -s -X POST \
          -H "Authorization: Bearer $HASS_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"state": "on"}' \
          https://home.thurs.pw/api/states/input_boolean.computer_c137
        echo "‚úÖ Turned On C137"
        sleep 15
      fi

flake:update:
  stage: flake
  image: local/nix-daemon:latest
  tags:
    - c137
  before_script:
  - . "$HOME/.nix-profile/etc/profile.d/nix.sh"
  variables:
    NIX_CONFIG: "access-tokens = github.com=$GITHUB_PAT"
  script:
    - nix flake update
  artifacts:
    paths:
      - flake.lock

build:artifacts:
  stage: build
  image: local/nix-daemon:latest
  tags:
    - c137
  dependencies:
    - flake:update
  before_script:
    - mkdir results
    - . "$HOME/.nix-profile/etc/profile.d/nix.sh"
  variables:
    NIX_CONFIG: "access-tokens = github.com=$GITHUB_PAT"
  script:
    - |
      for config in $HOSTS; do
        echo "Building $config..."
        nix build ".#nixosConfigurations.${config}.config.system.build.toplevel"
        echo "Moving results to results/$config..."
        mv result results/$config
      done
  artifacts:
    paths:
      - results/

attic:push:
  stage: attic
  image: local/nix-daemon:latest
  tags:
    - c137
  dependencies:
    - build:artifacts
  script:
    - /bin/attic login local http://192.168.10.15:8080 $ATTIC_TOKEN
    - cd results
    - |
      for config in $HOSTS; do
        echo "Pushing packages for $config:"
        /bin/attic push local ./$config
      done

sleep:
  stage: sleep
  image: alpine/curl:latest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - echo "üîç Checking device state..."
    - |
      DEVICE_STATE=$(curl -s http://192.168.10.60:8009/state/ip/192.168.10.137)
      if echo "$DEVICE_STATE" | grep -q '<state>online</state>'; then
        echo "üö© C137 is ONLINE"
        curl -s -X POST \
          -H "Authorization: Bearer $HASS_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"state": "off"}' \
          https://home.thurs.pw/api/states/input_boolean.computer_c137
        echo "‚úÖ Sleeping C137"
      fi
